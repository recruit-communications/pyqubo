name: Build&Upload

on:
  workflow_dispatch:
  pull_request:
  release:
    types:
      - released
  push:
    branches:
      - feature/addGithubActions 

env:
  Python_Version: 3.9

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}
      - name: Build sdist
        run: |
          pip install -r requirements.txt
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: dist/*.tar.gz
          retention-days: 1
  
  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}
      - name: Install PyQUBO
        run: |
          python -m pip install .
      - name: Generate Codecov Report
        run: |
          pip install -r requirements.txt
          python -m coverage run -m unittest discover .
      - name: Upload Codecov Report
        run: |
          codecov
  
  doctest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}

      - name: Install PyQUBO
        run: |
          python -m pip install .

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements_doctest.txt
          sphinx-build -W -b html docs docs/_build/html

      - name: Run Doctest
        run: |
          make doctest
  
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false 
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels on ${{ matrix.CIBW_PLATFORM }} ${{matrix.arch}}
        uses: pypa/cibuildwheel@v2.1.2
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./wheelhouse/*.whl
          retention-days: 1
          
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
